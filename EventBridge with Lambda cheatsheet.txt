Objective: Setup a cron job using event bridge to invoke a lambda function on 
Periodic basis. The Lambda function will look for running EC2s and stop them.
You may use not to clean up development account resources at a specific time (ex: 9pm)
Everyday. 

In this hands-on, we are invoking the lambda function every 2 minutes just to make it easy 
for testing.


Task 1 : Create Lambda function
------------
1. Create Lambda function 'stop-ec2'
2. Give a role to the Lambda function which has EC2 permissions.
3. Default timeout period - make it 90 secs instead of 3.
4. Add code. Change region name if needed. 

###code starts ###
import boto3

# Initialize a session using Amazon EC2
ec2 = boto3.client('ec2', region_name='us-east-1')  # Change region as necessary

def stop_running_instances():
    # Describe EC2 instances
    response = ec2.describe_instances(
        Filters=[
            {'Name': 'instance-state-name', 'Values': ['running']}
        ]
    )
    
    # Extract instance IDs of running instances
    running_instances = []
    for reservation in response['Reservations']:
        for instance in reservation['Instances']:
            running_instances.append(instance['InstanceId'])
    
    if running_instances:
        # Stop the running instances
        print(f"Stopping instances: {running_instances}")
        ec2.stop_instances(InstanceIds=running_instances)
        
        # Wait until the instances are stopped
        waiter = ec2.get_waiter('instance_stopped')
        waiter.wait(InstanceIds=running_instances)
        print(f"Instances stopped: {running_instances}")
    else:
        print("No running instances found.")


# comments
def lambda_handler(event, context):
      stop_running_instances()

###code ends###

5. Test the code in Lambda


Task 2: EventBridge schedule
----------------
6. Add a new schedule which executes in every 2 minutes. Target should be Lambda function.
   Cron timer - */2 * * * *

